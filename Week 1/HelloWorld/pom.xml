<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.revature</groupId>
	<artifactId>HelloWorld</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>


	<!-- Maven is a project management and build automation tool that allows 
		manages the distribution of Java projects. Some key features of Maven most 
		relevant to this training as found in the docs: - Superior dependency management 
		including automatic updating, dependency closures (also known as transitive 
		dependencies) - Model based builds: Maven is able to build any number of 
		projects into predefined output types such as a JAR, WAR, or distribution 
		based on metadata about the project, without the need to do any scripting 
		in most cases. - Dependency management: Maven encourages the use of a central 
		repository of JARs and other dependencies. Maven comes with a mechanism that 
		your project's clients can use to download any JARs required for building 
		your project from a central JAR repository much like Perl's CPAN. This allows 
		users of Maven to reuse JARs across projects and encourages communication 
		between projects to ensure that backward compatibility issues are dealt with. 
		http://maven.apache.org/maven-features.html Maven repository: https://mvnrepository.com/ -->
	<properties>
		<maven.compiler.target>1.8</maven.compiler.target>
		<maven.compiler.source>1.8</maven.compiler.source>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>42.2.18</version>
		</dependency>
	</dependencies>
</project>